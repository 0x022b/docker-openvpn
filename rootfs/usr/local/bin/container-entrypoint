#!/bin/sh
# shellcheck shell=dash
set -euo pipefail
# shellcheck disable=SC2154
if [ -n "${DEBUG+x}" ]; then
    set -x
fi

export PATH='/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'
readonly iface="${IFACE:-$(ip -4 route show 0/0 | awk '{ print $5 }')}"

config="/app/${OPENVPN_CLIENT_CONFIG:-config.ovpn}"
passwd="/app/${OPENVPN_AUTH_USER_PASS:-login.conf}"
runcfg='/tmp/config.ovpn'
dmnregx='([A-Za-z0-9-]{1,63}\.)+[A-Za-z]{2,}'

test -f "${config}"

while read -r line || [ -n "${line}" ]; do
    if printf '%s' "${line}" | grep -qE "^remote ${dmnregx} \d+$"; then
        host=$(printf '%s' "${line}" | awk '/^remote / { print $2 }')
        port=$(printf '%s' "${line}" | awk '/^remote / { print $3 }')

        dig +short "${host}" \
        | while read -r addr; do
            printf 'remote %s %s\n' "${addr}" "${port}"
        done
    else
        printf '%s\n' "${line}"
    fi
done > "${runcfg}" < "${config}"

proto=$(awk '/^proto / { print $2 }' "${runcfg}")
hosts=$(awk '/^remote / { print $2 }' "${runcfg}" \
    | sort -u -n -t. -k1,1 -k2,2 -k3,3 -k4,4 \
    | paste -s -d,
)
ports=$(awk '/^remote / { print $3 }' "${runcfg}" \
    | sort -u -n \
    | paste -s -d,
)

if [ -n "$(ip -4 route list scope link | head -c 1)" ]; then
    if [ -z "$(iptables-save | head -c 1)" ]; then
        iptables-restore '/etc/iptables/default-policy'
        iptables-restore -n '/etc/iptables/ipv4-default'
    fi

    { grep -E '^-(A|I) ' '/etc/iptables/ipv4-custom' || :; } \
    | sed "s/{PROTO}/${proto}/g; s/{HOST}/${hosts}/g; s/{PORT}/${ports}/g" \
    | sed "s/{IFACE}/${iface}/g" \
    | while read -r rule; do
        check=$(printf '%s' "${rule}" | sed -E 's/^-.( \S+)( \d+)?(.+)/-C\1\3/')
        # shellcheck disable=SC2086
        iptables ${check} 2> '/dev/null' || iptables ${rule}
    done
fi

if [ -n "$(ip -6 route list scope link | head -c 1)" ]; then
    if [ -z "$(ip6tables-save | head -c 1)" ]; then
        ip6tables-restore '/etc/iptables/default-policy'
    fi
fi

if [ "$1" = 'container-daemon' ]; then
    openvpn --mktun --dev 'tun0' --dev-type 'tun'

    set -- openvpn --config "${runcfg}" \
        --auth-user-pass "${passwd}" --auth-nocache \
        --dev 'tun0' --persist-tun \
        --mute-replay-warnings
fi

exec "$@"
